name: CI/CD Pipeline

on:
  push:
    branches:
      - cicd
  pull_request:
    branches:
      - cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install fastapi uvicorn flake8 pytest httpx

      - name: Lint
        run: 
          flake8 .

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q fastapiproj_tests.py 

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ secrets.DOCKER_USERNAME }}/my-fast-api-devops:latest .

      - name: Push Docker image
        run: docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/my-fast-api-devops:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 instance via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo yum update
            sudo yum install -y docker
            sudo service docker start
            sudo usermod -aG docker ec2-user || true
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull ghcr.io/${{ secrets.DOCKER_USERNAME }}/my-fast-api-devops:latest
            sudo docker stop my-fast-api-container || true
            sudo docker rm my-fast-api-container || true
            sudo docker run -d --name my-fast-api-container -p 8001:8000 ${{ secrets.DOCKER_USERNAME }}/my-fast-api-devops:latest



      
      
